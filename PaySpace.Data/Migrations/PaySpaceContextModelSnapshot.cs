// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaySpace.Data.Respository;

#nullable disable

namespace PaySpace.Data.Migrations
{
    [DbContext(typeof(PaySpaceContext))]
    partial class PaySpaceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PaySpace.Model.Calculator.CalculatorResponse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AnnualIncome")
                        .HasColumnType("float");

                    b.Property<double>("CalculatedValue")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CalculatorResponses");
                });

            modelBuilder.Entity("PaySpace.Model.Calculator.CalculatorTypeMap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CalculatorType")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CalculatorTypeMaps");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c12c5a45-950e-4911-ad18-a07bdc80acb7"),
                            CalculatorType = 2,
                            PostalCode = "7000"
                        },
                        new
                        {
                            Id = new Guid("9662f04f-d363-4831-87ae-e159be869f9c"),
                            CalculatorType = 0,
                            PostalCode = "1000"
                        },
                        new
                        {
                            Id = new Guid("40bbb4cc-3fb5-4d32-b29c-b839e38828ac"),
                            CalculatorType = 1,
                            PostalCode = "A100"
                        },
                        new
                        {
                            Id = new Guid("769edf75-2bd7-4688-b4f3-f433e79e54eb"),
                            CalculatorType = 0,
                            PostalCode = "7441"
                        });
                });

            modelBuilder.Entity("PaySpace.Model.Progressive.ProgressiveCalculatorRangeMap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("From")
                        .HasColumnType("float");

                    b.Property<double>("Percentage")
                        .HasColumnType("float");

                    b.Property<double>("To")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ProgressiveCalculatorRangeMaps");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e3c965f0-e8f3-45fc-ac17-ef8af23f5634"),
                            From = 0.0,
                            Percentage = 0.10000000000000001,
                            To = 8350.0
                        },
                        new
                        {
                            Id = new Guid("6cd0473e-3c9e-49e1-a010-82f634b5692c"),
                            From = 8351.0,
                            Percentage = 0.14999999999999999,
                            To = 33950.0
                        },
                        new
                        {
                            Id = new Guid("2218804c-3180-4470-85a8-512f9ec72224"),
                            From = 33951.0,
                            Percentage = 0.25,
                            To = 82250.0
                        },
                        new
                        {
                            Id = new Guid("4a3a1172-6563-415d-adcc-c503902023d9"),
                            From = 82251.0,
                            Percentage = 0.28000000000000003,
                            To = 171550.0
                        },
                        new
                        {
                            Id = new Guid("46820772-0c01-4f1b-992b-9c5e4ba91242"),
                            From = 171551.0,
                            Percentage = 0.33000000000000002,
                            To = 372950.0
                        },
                        new
                        {
                            Id = new Guid("0c355928-9b7b-479c-9c61-09570402e6c9"),
                            From = 372951.0,
                            Percentage = 0.34999999999999998,
                            To = 1.7976931348623157E+308
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
